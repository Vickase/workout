{"version":3,"sources":["components/overlay/index.jsx","components/bigButton/index.jsx","pages/home/index.jsx","constants.js","components/inputs/index.jsx","components/backButton/index.jsx","components/header/index.jsx","components/form/index.jsx","pages/add/index.jsx","components/exercise/index.jsx","components/card/index.jsx","pages/day/index.jsx","App.js","validate.js","serviceWorker.js","index.js"],"names":["Overlay","className","BigButton","to","style","fontSize","color","Home","DAYS","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","DAYS_NAMES","Inputs","props","placeholder","id","onChange","e","setDia","target","value","Object","values","map","val","type","setExercise","setRepeticiones","setSets","BackButton","history","useHistory","cursor","onClick","goBack","Header","title","Form","addEjercicio","useState","dia","exercise","repeticiones","sets","_e","Add","Exercise","ejercicios","ejercicio","Card","length","Day","match","rutina","params","day","toUpperCase","App","location","useLocation","transitions","useTransition","pathname","from","opacity","transform","enter","leave","reduce","acc","setRutina","isNaN","validate","console","error","push","item","key","div","path","exact","component","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5a7ec312.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Overlay = () => (\r\n  <div className=\"overlay-container\">\r\n    <header className=\"overlay-header\">\r\n      <h1 className=\"overlay-title\">LET'S WORKOUT</h1>\r\n    </header>\r\n  </div>\r\n);\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\n\r\nconst BigButton = () => (\r\n  <Link to=\"/add\" className=\"big-button\">\r\n    <AddCircle style={{fontSize: \"75px\", color: \"#BDFF44\" }} />\r\n  </Link>\r\n);\r\n\r\nexport default BigButton;\r\n","import React from \"react\";\r\nimport Overlay from \"../../components/overlay\";\r\nimport BigButton from \"../../components/bigButton\";\r\n\r\nconst Home = () => (\r\n  <>\r\n    <Overlay />\r\n    <BigButton />\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n","export const DAYS = {\r\n  //mayusculas=constantes\r\n  MONDAY: 1,\r\n  TUESDAY: 2,\r\n  WEDNESDAY: 3,\r\n  THURSDAY: 4,\r\n  FRIDAY: 5,\r\n  SATURDAY: 6,\r\n  SUNDAY: 7\r\n};\r\n\r\nexport const DAYS_NAMES = {\r\n  [DAYS.MONDAY]: \"Monday\",\r\n  [DAYS.TUESDAY]: \"Tuesday\",\r\n  [DAYS.WEDNESDAY]: \"Wednesday\",\r\n  [DAYS.THURSDAY]: \"Thursday\",\r\n  [DAYS.FRIDAY]: \"Friday\",\r\n  [DAYS.SATURDAY]: \"Saturday\",\r\n  [DAYS.SUNDAY]: \"Sunday\"\r\n};\r\n","import React from \"react\";\r\nimport { DAYS, DAYS_NAMES } from \"../../constants\";\r\n\r\nimport \"./inputs.css\";\r\n\r\nconst Inputs = props => {\r\n  return (\r\n    <div className=\"input-container\">\r\n      <header className=\"input-header\">\r\n        <h3>Insert Routine</h3>\r\n      </header>\r\n\r\n      <select\r\n        placeholder=\"Ingrese el dÃ­a\"\r\n        id=\"numero-dia\"\r\n        className=\"input\"\r\n        onChange={e => props.setDia(e.target.value)}\r\n      >\r\n        {Object.values(DAYS).map(val => (\r\n          <option value={val}>{DAYS_NAMES[val]}</option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Ingrese ejercicio\"\r\n        id=\"ejercicio\"\r\n        onChange={e => props.setExercise(e.target.value)}\r\n      ></input>\r\n      <div className=\"smaller-container\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"Ingrese cantidad de repeticiones\"\r\n          type=\"number\"\r\n          onChange={e => props.setRepeticiones(e.target.value)}\r\n        ></input>\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"Ingrese cantidad de sets\"\r\n          type=\"number\"\r\n          onChange={e => props.setSets(e.target.value)}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inputs;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\n\r\nfunction BackButton() {\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <ArrowBack\r\n      style={{ fontSize: \"40px\", color: \"#BDFF44\", cursor: \"pointer\" }}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport BackButton from \"../backButton\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header className=\"header-container\">\r\n    <BackButton />\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport Inputs from \"../inputs\";\r\nimport \"./form.css\";\r\n\r\nimport { DAYS } from \"../../constants\";\r\nimport Header from \"../header\";\r\n\r\nconst Form = ({ addEjercicio }) => {\r\n  const [dia, setDia] = useState(DAYS.MONDAY);\r\n  const [exercise, setExercise] = useState(\"\");\r\n  const [repeticiones, setRepeticiones] = useState(\"\");\r\n  const [sets, setSets] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Header title=\"WORKOUT\" />\r\n      <section className=\"form-section\">\r\n        <Inputs\r\n          setExercise={setExercise}\r\n          setDia={setDia}\r\n          setRepeticiones={setRepeticiones}\r\n          setSets={setSets}\r\n        />\r\n      </section>\r\n      <footer className=\"form-footer\">\r\n        <button\r\n          className=\"form-add-btn\"\r\n          onClick={_e => addEjercicio({ exercise, repeticiones, sets }, dia)}\r\n        >\r\n          Add exercise\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"../../components/form\";\r\n\r\nconst Add = ({ addEjercicio }) => (\r\n  <Form addEjercicio={addEjercicio} />\r\n);\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ ejercicios }) => {\r\n  return (\r\n    <>\r\n      {ejercicios.map(ejercicio => (\r\n        <div className=\"exercise-container\">\r\n          <ul className=\"exercise-list\">\r\n            <h3 className=\"exercise-name\">{ejercicio.exercise}</h3>\r\n            <li className=\"exercise-itemlist\">\r\n              {ejercicio.repeticiones}x{ejercicio.sets}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import React from \"react\";\r\nimport Exercise from \"../exercise\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ dia, ejercicios }) => {\r\n  if(!ejercicios.length) return <p>No exercises this day :(</p>;\r\n  return (\r\n    <div className={\"card-container\"}>\r\n      <section className=\"card-section\">\r\n        <Exercise ejercicios={ejercicios}></Exercise>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Header from \"../../components/header\";\r\nimport Card from \"../../components/card\";\r\nimport BigButton from \"../../components/bigButton\";\r\nimport \"./day.css\";\r\n\r\nimport { DAYS_NAMES } from \"../../constants\";\r\n\r\nconst Day = ({ match, rutina }) => {\r\n  return (\r\n    <div className=\"day-container\">\r\n      <Header title={DAYS_NAMES[match.params.day].toUpperCase()} />\r\n      <Card {...rutina[match.params.day]} />\r\n      <BigButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useState, useCallback } from \"react\";\nimport { Route, Switch, useLocation, useHistory } from \"react-router-dom\";\nimport { animated, useTransition } from \"react-spring\";\nimport \"./App.css\";\n\nimport Home from \"./pages/home\";\nimport Add from \"./pages/add\";\nimport Day from \"./pages/day\";\nimport { DAYS, DAYS_NAMES } from \"./constants\";\nimport { validate } from \"./validate\";\n\nexport const initializeState = () => {\n  return Object.values(DAYS).reduce((acc, val) => {\n    return { ...acc, [val]: { dia: DAYS_NAMES[val], ejercicios: [] } };\n  }, {});\n};\n\nconst App = () => {\n  // Animation\n  const location = useLocation();\n  let history = useHistory();\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: \"translate3d(100%,0,0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\n    leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" }\n  });\n\n  // State\n  const [rutina, setRutina] = useState(initializeState());\n  const addEjercicio = (ejercicio, dia) => {\n    if (!validate(ejercicio)) {\n      console.error(\"Invalid exercise! :(\");\n      return false;\n    }\n\n    setRutina({\n      ...rutina,\n      [dia]: {\n        ...rutina[dia],\n        ejercicios: [...rutina[dia].ejercicios, ejercicio]\n      }\n    });\n    history.push(`/day/${dia}`);\n  };\n\n  return (\n    <div className=\"app-container\">\n      {transitions.map(({ item, props, key }) => (\n        <animated.div key={key} style={props}>\n          <Switch location={item}>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/add\"\n              exact\n              render={props => <Add {...props} addEjercicio={addEjercicio} />}\n            />\n            <Route\n              path=\"/day/:day\"\n              exact\n              render={props => <Day {...props} rutina={rutina} />}\n            />\n          </Switch>\n        </animated.div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","export const validate = ({ exercise, repeticiones, sets }) => {\r\n  if (!exercise) return false;\r\n  if (!repeticiones || isNaN(repeticiones)) return false;\r\n  if (!sets || isNaN(sets)) return false;\r\n  return true;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}